create table public.users (
  id uuid not null,
  full_name character varying(255) not null,
  email character varying(255) not null,
  phone character varying(50) null,
  avatar_url text null,
  timezone character varying(50) null default 'UTC'::character varying,
  language character varying(10) null default 'en'::character varying,
  theme character varying(20) null default 'system'::character varying,
  notification_settings jsonb null default '{"project_updates": true, "push_notifications": true, "email_notifications": true, "rehearsal_reminders": true}'::jsonb,
  is_active boolean null default true,
  last_login timestamp with time zone null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  deleted_at timestamp with time zone null,
  constraint users_pkey primary key (id),
  constraint users_email_key unique (email),
  constraint users_theme_check check (
    (
      (theme)::text = any (
        (
          array[
            'light'::character varying,
            'dark'::character varying,
            'system'::character varying
          ]
        )::text[]
      )
    )
  )
) TABLESPACE pg_default;

create index IF not exists idx_users_email on public.users using btree (email) TABLESPACE pg_default;

create index IF not exists idx_users_active on public.users using btree (is_active) TABLESPACE pg_default
where
  (deleted_at is null);

create trigger update_users_updated_at BEFORE
update on users for EACH row
execute FUNCTION update_updated_at_column ();